/* Generated By:JJTree&JavaCC: Do not edit this line. CommandParserConstants.java */
package com.everdata.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CommandParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int K_AND = 6;
  /** RegularExpression Id. */
  int K_SEARCH = 7;
  /** RegularExpression Id. */
  int K_COUNTFIELD = 8;
  /** RegularExpression Id. */
  int K_LIMIT = 9;
  /** RegularExpression Id. */
  int K_OTHERSTR = 10;
  /** RegularExpression Id. */
  int K_PERCENTFIELD = 11;
  /** RegularExpression Id. */
  int K_SHOWCOUNT = 12;
  /** RegularExpression Id. */
  int K_SHOWPERC = 13;
  /** RegularExpression Id. */
  int K_USEOTHER = 14;
  /** RegularExpression Id. */
  int K_TIMEFORMAT = 15;
  /** RegularExpression Id. */
  int K_STARTTIME = 16;
  /** RegularExpression Id. */
  int K_ENDTIME = 17;
  /** RegularExpression Id. */
  int K_EARLIEST = 18;
  /** RegularExpression Id. */
  int K_LATEST = 19;
  /** RegularExpression Id. */
  int K_MINCOUNT = 20;
  /** RegularExpression Id. */
  int K_SOURCETYPE = 21;
  /** RegularExpression Id. */
  int K_TOP = 22;
  /** RegularExpression Id. */
  int K_BY = 23;
  /** RegularExpression Id. */
  int K_CREATE = 24;
  /** RegularExpression Id. */
  int K_DELETE = 25;
  /** RegularExpression Id. */
  int K_DESC = 26;
  /** RegularExpression Id. */
  int K_DESCRIBE = 27;
  /** RegularExpression Id. */
  int K_DISTINCT = 28;
  /** RegularExpression Id. */
  int K_DROP = 29;
  /** RegularExpression Id. */
  int K_EXPLAIN = 30;
  /** RegularExpression Id. */
  int K_HELP = 31;
  /** RegularExpression Id. */
  int K_FLOAT = 32;
  /** RegularExpression Id. */
  int K_FROM = 33;
  /** RegularExpression Id. */
  int K_INDEX = 34;
  /** RegularExpression Id. */
  int K_INSERT = 35;
  /** RegularExpression Id. */
  int K_INTEGER = 36;
  /** RegularExpression Id. */
  int K_INTO = 37;
  /** RegularExpression Id. */
  int K_ON = 38;
  /** RegularExpression Id. */
  int K_OR = 39;
  /** RegularExpression Id. */
  int K_NOT = 40;
  /** RegularExpression Id. */
  int K_ORDER = 41;
  /** RegularExpression Id. */
  int K_QUIT = 42;
  /** RegularExpression Id. */
  int K_SELECT = 43;
  /** RegularExpression Id. */
  int K_SET = 44;
  /** RegularExpression Id. */
  int K_STRING = 45;
  /** RegularExpression Id. */
  int K_STATS = 46;
  /** RegularExpression Id. */
  int K_TABLE = 47;
  /** RegularExpression Id. */
  int K_UPDATE = 48;
  /** RegularExpression Id. */
  int K_VALUES = 49;
  /** RegularExpression Id. */
  int K_WHERE = 50;
  /** RegularExpression Id. */
  int K_HASCHILD = 51;
  /** RegularExpression Id. */
  int K_HASPARENT = 52;
  /** RegularExpression Id. */
  int K_SUM = 53;
  /** RegularExpression Id. */
  int K_DC = 54;
  /** RegularExpression Id. */
  int K_MIN = 55;
  /** RegularExpression Id. */
  int K_MAX = 56;
  /** RegularExpression Id. */
  int K_AVG = 57;
  /** RegularExpression Id. */
  int K_EVAL = 58;
  /** RegularExpression Id. */
  int K_COUNT = 59;
  /** RegularExpression Id. */
  int K_AS = 60;
  /** RegularExpression Id. */
  int K_REGEX = 61;
  /** RegularExpression Id. */
  int K_SORT = 62;
  /** RegularExpression Id. */
  int K_JOIN = 63;
  /** RegularExpression Id. */
  int O_EQ = 64;
  /** RegularExpression Id. */
  int O_NEQ = 65;
  /** RegularExpression Id. */
  int O_GT = 66;
  /** RegularExpression Id. */
  int O_GTE = 67;
  /** RegularExpression Id. */
  int O_LT = 68;
  /** RegularExpression Id. */
  int O_LTE = 69;
  /** RegularExpression Id. */
  int O_LPAREN = 70;
  /** RegularExpression Id. */
  int O_RPAREN = 71;
  /** RegularExpression Id. */
  int O_COMMA = 72;
  /** RegularExpression Id. */
  int O_SEMI = 73;
  /** RegularExpression Id. */
  int O_QUOTE = 74;
  /** RegularExpression Id. */
  int O_VERTICAL = 75;
  /** RegularExpression Id. */
  int S_CHINESE = 76;
  /** RegularExpression Id. */
  int CJK = 77;
  /** RegularExpression Id. */
  int S_INTEGER = 78;
  /** RegularExpression Id. */
  int DIGIT = 79;
  /** RegularExpression Id. */
  int S_FLOAT = 80;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 81;
  /** RegularExpression Id. */
  int LETTER = 82;
  /** RegularExpression Id. */
  int SPECIAL_CHAR = 83;
  /** RegularExpression Id. */
  int S_QUOTED_STRING = 84;
  /** RegularExpression Id. */
  int S_SINGLE_QUOTED_STRING = 85;
  /** RegularExpression Id. */
  int LINE_COMMENT = 86;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 87;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\f\"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"AND\"",
    "\"SEARCH\"",
    "\"COUNTFIELD\"",
    "\"LIMIT\"",
    "\"OTHERSTR\"",
    "\"PERCENTFIELD\"",
    "\"SHOWCOUNT\"",
    "\"SHOWPERC\"",
    "\"USEROTHER\"",
    "\"TIMEFORMAT\"",
    "\"STARTTIME\"",
    "\"ENDTIME\"",
    "\"EARLIEST\"",
    "\"LATEST\"",
    "\"MINCOUNT\"",
    "\"SOURCETYPE\"",
    "\"TOP\"",
    "\"BY\"",
    "\"CREATE\"",
    "\"DELETE\"",
    "\"DESC\"",
    "\"DESCRIBE\"",
    "\"DISTINCT\"",
    "\"DROP\"",
    "\"EXPLAIN\"",
    "\"HELP\"",
    "\"FLOAT\"",
    "\"FROM\"",
    "\"INDEX\"",
    "\"INSERT\"",
    "\"INTEGER\"",
    "\"INTO\"",
    "\"ON\"",
    "\"OR\"",
    "\"NOT\"",
    "\"ORDER\"",
    "\"QUIT\"",
    "\"SELECT\"",
    "\"SET\"",
    "\"STRING\"",
    "\"STATS\"",
    "\"TABLE\"",
    "\"UPDATE\"",
    "\"VALUES\"",
    "\"WHERE\"",
    "\"HASCHILD\"",
    "\"HASPARENT\"",
    "\"SUM\"",
    "\"DC\"",
    "\"MIN\"",
    "\"MAX\"",
    "\"AVG\"",
    "\"EVAL\"",
    "\"COUNT\"",
    "\"AS\"",
    "\"REGEX\"",
    "\"SORT\"",
    "\"JOIN\"",
    "\"=\"",
    "\"!=\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\"\\\"\"",
    "\"|\"",
    "<S_CHINESE>",
    "<CJK>",
    "<S_INTEGER>",
    "<DIGIT>",
    "<S_FLOAT>",
    "<S_IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHAR>",
    "<S_QUOTED_STRING>",
    "<S_SINGLE_QUOTED_STRING>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
  };

}
